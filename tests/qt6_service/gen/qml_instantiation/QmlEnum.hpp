/* Generated by YARPC
* Version:  0.1.0
* Definition:
*   File: /workspace/tests/definitions/qt6/07_qml_instantiation.yml
*   Object: QmlEnum
*   Template: qt6/enum_header.j2
*/
#pragma once
#include <QObject>
#include <QDBusArgument>
#include <qqmlintegration.h>

namespace gen::qml_instantiation {

/**
 * Wrapper for the QmlEnum enum, since QML doesn't support enum classes.
 *
 * This allows the enum values to be accessed in QML via `QmlEnum.
 */
class QmlEnum : public QObject {
    Q_OBJECT
    QML_SINGLETON
    QML_ELEMENT
public:

    /**
     * * @brief an enum
     */
    enum Type : int {
        ONE = 1,
        TWO = 2,
        ENO = -1,
        OWT = -2,
    };
    Q_ENUM(Type)

    /**
     * Converts a value of the underlying type to the enum.
     *
     * @param value the value of the underlying type
     * @returns the converted value
     */
    Q_INVOKABLE static Type fromValue(int value);

    /**
     * Converts an enum value to the underlying type.
     *
     * @param value the enum value
     * @returns the converted value
     */
    Q_INVOKABLE static int toValue (Type value);
};

/**
 * @brief Marshalls a QmlEnum into a QDBusArgument.
 *
 * @param argument the argument to marshall into
 * @param object the object to marshall
 *
 * @returns QDBusArgument the argument containing the marshalled object (same as argument)
 */
QDBusArgument &operator<<(QDBusArgument &argument, const QmlEnum::Type &object);

/**
 * @brief Demarshalls a QmlEnum from a QDBusArgument.
 *
 * @param argument the argument to demarshall from
 * @param object the object to demarshall
 *
 * @returns QDBusArgument the argument containing the marshalled object (same as argument)
 */
const QDBusArgument &operator>>(const QDBusArgument &argument, QmlEnum::Type &object);

}