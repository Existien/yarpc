/* Generated by YARPC
 * Version:  0.1.0
 * Definition:
 *   File: /workspace/tests/definitions/qt6/07_qml_instantiation.yml
 *   Object: QmlAsClient
 *   Template: qt6/client_header.j2
 */
#pragma once
#include <QObject>
#include <qqmlintegration.h>
#include <QDBusMessage>
#include <QDBusServiceWatcher>
#include <QDBusPendingCallWatcher>
#include <QVariant>
#include "DBusError.hpp"
#include "QmlStruct.hpp"
#include "QmlEnum.hpp"
#include "types.hpp"
namespace gen::qml_instantiation {

namespace QmlAsClientUtils {

/**
 * @brief Pending call object for the PassStructMethod method calls.
 */
class PassStructMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassStructMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassStructMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassStructMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassArrayInArrayMethod method calls.
 */
class PassArrayInArrayMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassArrayInArrayMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassArrayInArrayMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassArrayInArrayMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassStructsInArrayMethod method calls.
 */
class PassStructsInArrayMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassStructsInArrayMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassStructsInArrayMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassStructsInArrayMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassDictWithStringsMethod method calls.
 */
class PassDictWithStringsMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassDictWithStringsMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassDictWithStringsMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassDictWithStringsMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassDictWithNumbersMethod method calls.
 */
class PassDictWithNumbersMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassDictWithNumbersMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassDictWithNumbersMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassDictWithNumbersMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassDictWithStructsMethod method calls.
 */
class PassDictWithStructsMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassDictWithStructsMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassDictWithStructsMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassDictWithStructsMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassDictInArrayMethod method calls.
 */
class PassDictInArrayMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassDictInArrayMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassDictInArrayMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassDictInArrayMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassDictInDictMethod method calls.
 */
class PassDictInDictMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassDictInDictMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassDictInDictMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassDictInDictMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassArrayInDictMethod method calls.
 */
class PassArrayInDictMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassArrayInDictMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassArrayInDictMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassArrayInDictMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassDictInArrayInDictMethod method calls.
 */
class PassDictInArrayInDictMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassDictInArrayInDictMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassDictInArrayInDictMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassDictInArrayInDictMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassDictInArrayInArrayMethod method calls.
 */
class PassDictInArrayInArrayMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassDictInArrayInArrayMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassDictInArrayInArrayMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassDictInArrayInArrayMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

/**
 * @brief Pending call object for the PassDictWithEnumsMethod method calls.
 */
class PassDictWithEnumsMethodPendingCall : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    PassDictWithEnumsMethodPendingCall(QDBusPendingCall pendingCall, QObject *parent);
signals:
    /**
     * @brief Emitted when an PassDictWithEnumsMethod call returns.
     */
    void finished();

    /**
     * @brief Emitted when an error ocurred during an PassDictWithEnumsMethod call.
     *
     * @param error the error
     */
    void error(DBusError error);
private slots:
    void callFinished(QDBusPendingCallWatcher *watcher);
private:
    QDBusPendingCallWatcher m_watcher;
};

}

/**
 * D-Bus client for the com.yarpc.backend.qmlInstantiation D-Bus interface
 */
class QmlAsClient : public QObject {
    Q_OBJECT
    QML_ELEMENT
    /**
     * @brief Whether the client is connected.
     */
    Q_PROPERTY(bool connected READ getConnected NOTIFY connectedChanged)
public:
    QmlAsClient(QObject* parent = nullptr);

    /**
     * @brief pass struct
     *
     * @param qmlStruct the struct
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassStructMethodPendingCall* PassStructMethod(
        QmlStruct qmlStruct
    );

    /**
     * @brief pass nested arrays
     *
     * @param listOfLists the nested array
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassArrayInArrayMethodPendingCall* PassArrayInArrayMethod(
        QList<QList<uint>> listOfLists
    );

    /**
     * @brief pass structs in array
     *
     * @param listOfStructs list of structs
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassStructsInArrayMethodPendingCall* PassStructsInArrayMethod(
        QList<QmlStruct> listOfStructs
    );

    /**
     * @brief pass a dict with strings as keys
     *
     * @param dictWithStrings dict with string as keys
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictWithStringsMethodPendingCall* PassDictWithStringsMethod(
        QMap<QString, QString> dictWithStrings
    );

    /**
     * @brief pass a dict with numbers as keys
     *
     * @param dictWithNumbers dict with numbers as keys
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictWithNumbersMethodPendingCall* PassDictWithNumbersMethod(
        QMap<uint, QString> dictWithNumbers
    );

    /**
     * @brief pass a dict with structs as values
     *
     * @param dictWithStructs dict with structs as values
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictWithStructsMethodPendingCall* PassDictWithStructsMethod(
        QMap<QString, QmlStruct> dictWithStructs
    );

    /**
     * @brief pass dict in array
     *
     * @param listOfDicts list of dicts
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictInArrayMethodPendingCall* PassDictInArrayMethod(
        QList<QMap<QString, QString>> listOfDicts
    );

    /**
     * @brief pass dict in dict
     *
     * @param dictOfDicts dict of dicts
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictInDictMethodPendingCall* PassDictInDictMethod(
        QMap<QString, QMap<QString, QString>> dictOfDicts
    );

    /**
     * @brief pass array in dict
     *
     * @param dictOfLists dict of lists
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassArrayInDictMethodPendingCall* PassArrayInDictMethod(
        QMap<QString, QList<QString>> dictOfLists
    );

    /**
     * @brief pass dict in array in dict
     *
     * @param dictOfListsOfDicts dict of lists of dicts
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictInArrayInDictMethodPendingCall* PassDictInArrayInDictMethod(
        QMap<QString, QList<QMap<QString, QString>>> dictOfListsOfDicts
    );

    /**
     * @brief pass dict in array in array
     *
     * @param listOfListsOfDicts list of lists of dicts
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictInArrayInArrayMethodPendingCall* PassDictInArrayInArrayMethod(
        QList<QList<QMap<QString, QString>>> listOfListsOfDicts
    );

    /**
     * @brief pass dict with enums as keys and values
     *
     * @param dictOfEnumsToEnums dict of enums to enums
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictWithEnumsMethodPendingCall* PassDictWithEnumsMethod(
        QMap<QmlEnum::Type, QmlEnum::Type> dictOfEnumsToEnums
    );

public slots:
    /**
     * @brief Returns whether the target service is available.
     *
     * @returns Whether the target service is available.
     */
    bool getConnected() const;

    /**
     * @brief Returns a map containing the current values of all properties.
     *
     * @returns a map containing the current values of all properties
     */
    QVariantMap getAllProperties() const;

    /**
     * @brief pass struct
     *
     * @param qmlStruct the struct
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassStructMethodPendingCall* PassStructMethod(
        QVariant qmlStruct
    );

    /**
     * @brief pass nested arrays
     *
     * @param listOfLists the nested array
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassArrayInArrayMethodPendingCall* PassArrayInArrayMethod(
        QVariant listOfLists
    );

    /**
     * @brief pass structs in array
     *
     * @param listOfStructs list of structs
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassStructsInArrayMethodPendingCall* PassStructsInArrayMethod(
        QVariant listOfStructs
    );

    /**
     * @brief pass a dict with strings as keys
     *
     * @param dictWithStrings dict with string as keys
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictWithStringsMethodPendingCall* PassDictWithStringsMethod(
        QVariant dictWithStrings
    );

    /**
     * @brief pass a dict with numbers as keys
     *
     * @param dictWithNumbers dict with numbers as keys
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictWithNumbersMethodPendingCall* PassDictWithNumbersMethod(
        QVariant dictWithNumbers
    );

    /**
     * @brief pass a dict with structs as values
     *
     * @param dictWithStructs dict with structs as values
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictWithStructsMethodPendingCall* PassDictWithStructsMethod(
        QVariant dictWithStructs
    );

    /**
     * @brief pass dict in array
     *
     * @param listOfDicts list of dicts
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictInArrayMethodPendingCall* PassDictInArrayMethod(
        QVariant listOfDicts
    );

    /**
     * @brief pass dict in dict
     *
     * @param dictOfDicts dict of dicts
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictInDictMethodPendingCall* PassDictInDictMethod(
        QVariant dictOfDicts
    );

    /**
     * @brief pass array in dict
     *
     * @param dictOfLists dict of lists
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassArrayInDictMethodPendingCall* PassArrayInDictMethod(
        QVariant dictOfLists
    );

    /**
     * @brief pass dict in array in dict
     *
     * @param dictOfListsOfDicts dict of lists of dicts
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictInArrayInDictMethodPendingCall* PassDictInArrayInDictMethod(
        QVariant dictOfListsOfDicts
    );

    /**
     * @brief pass dict in array in array
     *
     * @param listOfListsOfDicts list of lists of dicts
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictInArrayInArrayMethodPendingCall* PassDictInArrayInArrayMethod(
        QVariant listOfListsOfDicts
    );

    /**
     * @brief pass dict with enums as keys and values
     *
     * @param dictOfEnumsToEnums dict of enums to enums
     *
     * @returns Pending call object with finished signal containing the reply.
     */
    QmlAsClientUtils::PassDictWithEnumsMethodPendingCall* PassDictWithEnumsMethod(
        QVariant dictOfEnumsToEnums
    );

signals:
    /**
     * @brief Emitted when the connected property changes.
     */
    void connectedChanged();

private slots:
    void connectedHandler(const QString& service);
    void disconnectedHandler(const QString& service);
    void propertiesChangedHandler(QString interface, QVariantMap changes, QStringList);
private:
    bool m_connected = false;
    QDBusServiceWatcher m_watcher;
};

}