/* Generated by YARPC
 * Version:  0.1.0
 * Definition:
 *   File: /workspace/tests/definitions/06.4_enums_with_structs.yml
 *   Object: EnumStruct
 *   Template: qt6/struct_header.j2
 */

#pragma once
#include "Color.hpp"
#include <QObject>
#include <QDBusArgument>
#include <QDBusMessage>
#include <qqmlintegration.h>

namespace gen::enums {

/**
 * @brief a struct
 */
struct EnumStruct {
    Q_GADGET
    /**
     * @brief a color
     */
    Q_PROPERTY(Color::Type color MEMBER color)
    /**
     * @brief colors
     */
    Q_PROPERTY(QList<Color::Type> colorArray MEMBER colorArray)
    /**
     * @brief color map
     */
    Q_PROPERTY(QMap<Color::Type, Color::Type> colorDict MEMBER colorDict)
public:
    /**
     * @brief a color
     */
    Color::Type color;
    /**
     * @brief colors
     */
    QList<Color::Type> colorArray;
    /**
     * @brief color map
     */
    QMap<Color::Type, Color::Type> colorDict;
};

/**
 * @brief Marshalls a EnumStruct into a QDBusArgument.
 *
 * @param argument the argument to marshall into
 * @param object the object to marshall
 *
 * @returns QDBusArgument the argument containing the marshalled object (same as argument)
 */
QDBusArgument &operator<<(QDBusArgument &argument, const EnumStruct &object);

/**
 * @brief Demarshalls a EnumStruct from a QDBusArgument.
 *
 * @param argument the argument to demarshall from
 * @param object the object to demarshall
 *
 * @returns QDBusArgument the argument containing the marshalled object (same as argument)
 */
const QDBusArgument &operator>>(const QDBusArgument &argument, EnumStruct &object);

bool operator!=(const EnumStruct &lhs, const EnumStruct &rhs);

/**
 * @brief Factory to create EnumStruct objects in QML.
 */
class EnumStructFactory : public QObject {
    Q_OBJECT
    QML_ELEMENT
    QML_SINGLETON
public:
    /**
     * @brief Create a EnumStruct object.
     *
     * @param color a color
     * @param colorArray colors
     * @param colorDict color map
     */
    EnumStruct create (
        Color::Type color,
        QList<Color::Type> colorArray,
        QMap<Color::Type, Color::Type> colorDict
    ) const;

    /**
     * @brief Create a EnumStruct object.
     *
     * @param color a color
     * @param colorArray colors
     * @param colorDict color map
     */
    Q_INVOKABLE EnumStruct create (
        QVariant color,
        QVariant colorArray,
        QVariant colorDict
    ) const;
};

}

Q_DECLARE_METATYPE(gen::enums::EnumStruct)