/* Generated by YARPC
 * Version:  0.1.0
 * Definition:
 *   File: /workspace/tests/definitions/05.4_dictionaries_keys.yml
 *   Object: DictKeys
 *   Template: qt6/service_header.j2
 */
#pragma once
#include <QObject>
#include <qqmlintegration.h>
#include <QDBusAbstractAdaptor>
#include <QDBusConnection>
#include <QDBusMessage>
#include <memory>
#include "DBusError.hpp"
namespace gen::dicts {

/**
 * @brief D-Bus adaptor for the DictKeys interface.
 */
class DictKeysInterfaceAdaptor : public QDBusAbstractAdaptor {
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.yarpc.testservice.dictKeys")
public:
    DictKeysInterfaceAdaptor(QObject* parent = nullptr);
public slots:
    /**
     * @brief a method
     */
    void Uint8Method(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void BoolMethod(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void Int16Method(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void Uint16Method(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void Int32Method(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void Uint32Method(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void Int64Method(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void Uint64Method(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void DoubleMethod(const QDBusMessage &message);
    /**
     * @brief a method
     */
    void StringMethod(const QDBusMessage &message);
signals:
    /**
     * @brief a signal
     */
    void Uint8Signal();
    /**
     * @brief a signal
     */
    void BoolSignal();
    /**
     * @brief a signal
     */
    void Int16Signal();
    /**
     * @brief a signal
     */
    void Uint16Signal();
    /**
     * @brief a signal
     */
    void Int32Signal();
    /**
     * @brief a signal
     */
    void Uint32Signal();
    /**
     * @brief a signal
     */
    void Int64Signal();
    /**
     * @brief a signal
     */
    void Uint64Signal();
    /**
     * @brief a signal
     */
    void DoubleSignal();
    /**
     * @brief a signal
     */
    void StringSignal();
};

class Uint8MethodArgs {
    Q_GADGET
};

class Uint8MethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    Uint8MethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    Uint8MethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    Uint8MethodArgs m_args;
};

class BoolMethodArgs {
    Q_GADGET
};

class BoolMethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    BoolMethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    BoolMethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    BoolMethodArgs m_args;
};

class Int16MethodArgs {
    Q_GADGET
};

class Int16MethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    Int16MethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    Int16MethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    Int16MethodArgs m_args;
};

class Uint16MethodArgs {
    Q_GADGET
};

class Uint16MethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    Uint16MethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    Uint16MethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    Uint16MethodArgs m_args;
};

class Int32MethodArgs {
    Q_GADGET
};

class Int32MethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    Int32MethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    Int32MethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    Int32MethodArgs m_args;
};

class Uint32MethodArgs {
    Q_GADGET
};

class Uint32MethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    Uint32MethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    Uint32MethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    Uint32MethodArgs m_args;
};

class Int64MethodArgs {
    Q_GADGET
};

class Int64MethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    Int64MethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    Int64MethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    Int64MethodArgs m_args;
};

class Uint64MethodArgs {
    Q_GADGET
};

class Uint64MethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    Uint64MethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    Uint64MethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    Uint64MethodArgs m_args;
};

class DoubleMethodArgs {
    Q_GADGET
};

class DoubleMethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    DoubleMethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    DoubleMethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    DoubleMethodArgs m_args;
};

class StringMethodArgs {
    Q_GADGET
};

class StringMethodPendingReply : public QObject {
    Q_OBJECT
    QML_UNCREATABLE("")
    QML_ELEMENT
public:
    StringMethodPendingReply(QDBusMessage call, QObject *parent);
public slots:
    StringMethodArgs* args();
    void sendReply();
    void sendError(const QString &name, const QString &message);
    void sendError(const DBusError &error);
private:
    QDBusMessage m_call;
    StringMethodArgs m_args;
};


class DictKeysInterface : public QObject {
    Q_OBJECT
    QML_ELEMENT
    Q_PROPERTY(bool connected READ getConnected NOTIFY connectedChanged)
public:
    DictKeysInterface(QObject* parent = nullptr);
    bool getConnected() const;
    void callFinished(const QDBusMessage &reply);
    void handleUint8MethodCalled(QDBusMessage call);
    void handleBoolMethodCalled(QDBusMessage call);
    void handleInt16MethodCalled(QDBusMessage call);
    void handleUint16MethodCalled(QDBusMessage call);
    void handleInt32MethodCalled(QDBusMessage call);
    void handleUint32MethodCalled(QDBusMessage call);
    void handleInt64MethodCalled(QDBusMessage call);
    void handleUint64MethodCalled(QDBusMessage call);
    void handleDoubleMethodCalled(QDBusMessage call);
    void handleStringMethodCalled(QDBusMessage call);

public slots:
    void connect();
    void disconnect();

    void EmitUint8Signal();
    void EmitBoolSignal();
    void EmitInt16Signal();
    void EmitUint16Signal();
    void EmitInt32Signal();
    void EmitUint32Signal();
    void EmitInt64Signal();
    void EmitUint64Signal();
    void EmitDoubleSignal();
    void EmitStringSignal();

signals:
    void connectedChanged();
    void uint8MethodCalled(BumpPendingReply* reply);
    void boolMethodCalled(BumpPendingReply* reply);
    void int16MethodCalled(BumpPendingReply* reply);
    void uint16MethodCalled(BumpPendingReply* reply);
    void int32MethodCalled(BumpPendingReply* reply);
    void uint32MethodCalled(BumpPendingReply* reply);
    void int64MethodCalled(BumpPendingReply* reply);
    void uint64MethodCalled(BumpPendingReply* reply);
    void doubleMethodCalled(BumpPendingReply* reply);
    void stringMethodCalled(BumpPendingReply* reply);

private:
    DictKeysInterfaceAdaptor *m_adaptor;
    std::unique_ptr<QDBusConnection> m_connection = nullptr;
};

}