/* Generated by YARPC
 * Version:  0.1.0
 * Definition:
 *   File: /workspace/tests/definitions/05.4_dictionaries_keys.yml
 *   Object: DictKeys
 *   Template: qt6/service_header.j2
 */
#pragma once
#include <QObject>
#include <qqmlintegration.h>
#include <QDBusAbstractAdaptor>
#include <QDBusMessage>
#include "DictKeysInterface.hpp"

namespace gen::dicts {

/**
 * @brief D-Bus adaptor for the DictKeys interface.
 */
class DictKeysInterfaceAdaptor : public QDBusAbstractAdaptor {
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.yarpc.testservice.dictKeys")
public:
    DictKeysInterfaceAdaptor(DictKeysInterface* iface, QObject* parent = nullptr);
public slots:
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<uchar, QString> Uint8Method(
        QMap<uchar, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<bool, QString> BoolMethod(
        QMap<bool, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<short, QString> Int16Method(
        QMap<short, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<ushort, QString> Uint16Method(
        QMap<ushort, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<int, QString> Int32Method(
        QMap<int, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<uint, QString> Uint32Method(
        QMap<uint, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<qlonglong, QString> Int64Method(
        QMap<qlonglong, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<qulonglong, QString> Uint64Method(
        QMap<qulonglong, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<double, QString> DoubleMethod(
        QMap<double, QString> value,
        const QDBusMessage &_message
    );
    /**
     * @brief a method
     *
     * @param value the value
     * @param _message The D-Bus message object
     *
     * @returns the return type
     */
    QMap<QString, QString> StringMethod(
        QMap<QString, QString> value,
        const QDBusMessage &_message
    );
signals:
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void Uint8Signal(
        QMap<uchar, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void BoolSignal(
        QMap<bool, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void Int16Signal(
        QMap<short, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void Uint16Signal(
        QMap<ushort, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void Int32Signal(
        QMap<int, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void Uint32Signal(
        QMap<uint, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void Int64Signal(
        QMap<qlonglong, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void Uint64Signal(
        QMap<qulonglong, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void DoubleSignal(
        QMap<double, QString> value
    );
    /**
     * @brief a signal
     *
     * @param value the value
     *
     */
    void StringSignal(
        QMap<QString, QString> value
    );
private:
    DictKeysInterface* m_iface;
};

}