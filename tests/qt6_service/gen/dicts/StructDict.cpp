/* Generated by YARPC
 * Version:  0.1.0
 * Definition:
 *   File: /workspace/tests/definitions/05.2_dictionaries_with_structs.yml
 *   Object: StructDict
 *   Template: qt6/struct_source.j2
 */
#include <QMetaType>
#include <QDBusMetaType>
#include "StructDict.hpp"
#include "types.hpp"

using namespace gen::dicts;

QDBusArgument &gen::dicts::operator<<(QDBusArgument &argument, const StructDict &object) {
    argument.beginStructure();
    argument << object.numbers;
    argument.endStructure();
    return argument;
}

const QDBusArgument &gen::dicts::operator>>(const QDBusArgument &argument, StructDict &object) {
    argument.beginStructure();
    argument >> object.numbers;
    argument.endStructure();
    return argument;
}

bool gen::dicts::operator!=(const StructDict &lhs, const StructDict &rhs) {
    return (false
        || lhs.numbers != rhs.numbers
    );
}

StructDict StructDictFactory::create (
    QMap<QString, QMap<QString, uint>> numbers
) const {
    return StructDict {
        .numbers = numbers,
    };
}

StructDict StructDictFactory::create (
    QVariant numbers
) const {
    QMap<QString, QMap<QString, uint>> member_0;
    member_0 = numbers.value<QMap<QString, QMap<QString, uint>>>();

    return StructDict {
        .numbers = member_0,
    };
}