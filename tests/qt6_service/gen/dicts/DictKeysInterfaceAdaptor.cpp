/* Generated by YARPC
 * Version:  0.1.0
 * Definition:
 *   File: /workspace/tests/definitions/05.4_dictionaries_keys.yml
 *   Object: DictKeys
 *   Template: qt6/service_source.j2
 */
#include "DictKeysInterfaceAdaptor.hpp"

using namespace gen::dicts;

DictKeysInterfaceAdaptor::DictKeysInterfaceAdaptor(DictKeysInterface* iface, QObject* parent) : m_iface(iface), QDBusAbstractAdaptor(parent) {

}

QMap<$1, $2> DictKeysInterfaceAdaptor::Uint8Method(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleUint8MethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::BoolMethod(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleBoolMethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::Int16Method(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleInt16MethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::Uint16Method(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleUint16MethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::Int32Method(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleInt32MethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::Uint32Method(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleUint32MethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::Int64Method(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleInt64MethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::Uint64Method(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleUint64MethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::DoubleMethod(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleDoubleMethodCalled(_message);
    return {};
}

QMap<$1, $2> DictKeysInterfaceAdaptor::StringMethod(
    QMap<$1, $2> value,
    const QDBusMessage &_message
){
    _message.setDelayedReply(true);
    m_iface->handleStringMethodCalled(_message);
    return {};
}

